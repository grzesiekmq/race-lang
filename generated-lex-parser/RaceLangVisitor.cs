//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from RaceLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Generated {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="RaceLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IRaceLangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.name_token"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitName_token([NotNull] RaceLangParser.Name_tokenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] RaceLangParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModule([NotNull] RaceLangParser.ModuleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.import_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImport_stmt([NotNull] RaceLangParser.Import_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.top_level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTop_level([NotNull] RaceLangParser.Top_levelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.top_level_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTop_level_item([NotNull] RaceLangParser.Top_level_itemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.struct_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStruct_decl([NotNull] RaceLangParser.Struct_declContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.field_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField_decl([NotNull] RaceLangParser.Field_declContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] RaceLangParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.system_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSystem_decl([NotNull] RaceLangParser.System_declContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParam_list([NotNull] RaceLangParser.Param_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParam([NotNull] RaceLangParser.ParamContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.component_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComponent_list([NotNull] RaceLangParser.Component_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.car_instance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCar_instance([NotNull] RaceLangParser.Car_instanceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.engine_instance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEngine_instance([NotNull] RaceLangParser.Engine_instanceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.track_instance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTrack_instance([NotNull] RaceLangParser.Track_instanceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.race_instance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRace_instance([NotNull] RaceLangParser.Race_instanceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.field_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField_value([NotNull] RaceLangParser.Field_valueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.function_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_decl([NotNull] RaceLangParser.Function_declContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] RaceLangParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] RaceLangParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.var_decl_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVar_decl_stmt([NotNull] RaceLangParser.Var_decl_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.lvalue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLvalue([NotNull] RaceLangParser.LvalueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] RaceLangParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_stmt([NotNull] RaceLangParser.If_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.for_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor_stmt([NotNull] RaceLangParser.For_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.expression_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_stmt([NotNull] RaceLangParser.Expression_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_stmt([NotNull] RaceLangParser.Return_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] RaceLangParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MulDivExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.expr1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulDivExpr([NotNull] RaceLangParser.MulDivExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PassUp1</c>
	/// labeled alternative in <see cref="RaceLangParser.expr1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPassUp1([NotNull] RaceLangParser.PassUp1Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PassUp2</c>
	/// labeled alternative in <see cref="RaceLangParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPassUp2([NotNull] RaceLangParser.PassUp2Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AddSubExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.expr2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSubExpr([NotNull] RaceLangParser.AddSubExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PassUp3</c>
	/// labeled alternative in <see cref="RaceLangParser.expr3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPassUp3([NotNull] RaceLangParser.PassUp3Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CompareExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.expr3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareExpr([NotNull] RaceLangParser.CompareExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryMinusExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.expr4"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryMinusExpr([NotNull] RaceLangParser.UnaryMinusExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryNotExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.expr4"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryNotExpr([NotNull] RaceLangParser.UnaryNotExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostfixExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.expr4"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixExpr([NotNull] RaceLangParser.PostfixExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.postfix_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfix_expr([NotNull] RaceLangParser.Postfix_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.postfix_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfix_op([NotNull] RaceLangParser.Postfix_opContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.arg_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArg_list([NotNull] RaceLangParser.Arg_listContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LiteralExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpr([NotNull] RaceLangParser.LiteralExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdExpr([NotNull] RaceLangParser.IdExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrayExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayExpr([NotNull] RaceLangParser.ArrayExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructInit</c>
	/// labeled alternative in <see cref="RaceLangParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructInit([NotNull] RaceLangParser.StructInitContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="RaceLangParser.primary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenExpr([NotNull] RaceLangParser.ParenExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] RaceLangParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.array_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray_expr([NotNull] RaceLangParser.Array_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.struct_init"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStruct_init([NotNull] RaceLangParser.Struct_initContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.init_field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInit_field([NotNull] RaceLangParser.Init_fieldContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.shader_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShader_decl([NotNull] RaceLangParser.Shader_declContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaceLangParser.shader_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShader_type([NotNull] RaceLangParser.Shader_typeContext context);
}
} // namespace Generated
